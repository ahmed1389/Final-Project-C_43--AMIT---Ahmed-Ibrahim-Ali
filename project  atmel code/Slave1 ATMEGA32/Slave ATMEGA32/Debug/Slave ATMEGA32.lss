
Slave ATMEGA32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000594  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00000594  00000608  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000628  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000658  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000178  00000000  00000000  00000694  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000159c  00000000  00000000  0000080c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008e9  00000000  00000000  00001da8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a27  00000000  00000000  00002691  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002bc  00000000  00000000  000030b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000618  00000000  00000000  00003374  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009f3  00000000  00000000  0000398c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000128  00000000  00000000  0000437f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e9       	ldi	r30, 0x94	; 148
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 38       	cpi	r26, 0x80	; 128
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 78 02 	call	0x4f0	; 0x4f0 <main>
  7a:	0c 94 c8 02 	jmp	0x590	; 0x590 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_SetPinDir>:
  82:	44 23       	and	r20, r20
  84:	b9 f1       	breq	.+110    	; 0xf4 <DIO_SetPinDir+0x72>
  86:	41 30       	cpi	r20, 0x01	; 1
  88:	09 f0       	breq	.+2      	; 0x8c <DIO_SetPinDir+0xa>
  8a:	6b c0       	rjmp	.+214    	; 0x162 <DIO_SetPinDir+0xe0>
  8c:	81 30       	cpi	r24, 0x01	; 1
  8e:	89 f0       	breq	.+34     	; 0xb2 <DIO_SetPinDir+0x30>
  90:	28 f0       	brcs	.+10     	; 0x9c <DIO_SetPinDir+0x1a>
  92:	82 30       	cpi	r24, 0x02	; 2
  94:	c9 f0       	breq	.+50     	; 0xc8 <DIO_SetPinDir+0x46>
  96:	83 30       	cpi	r24, 0x03	; 3
  98:	11 f1       	breq	.+68     	; 0xde <DIO_SetPinDir+0x5c>
  9a:	08 95       	ret
  9c:	2a b3       	in	r18, 0x1a	; 26
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_SetPinDir+0x26>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_SetPinDir+0x22>
  ac:	82 2b       	or	r24, r18
  ae:	8a bb       	out	0x1a, r24	; 26
  b0:	08 95       	ret
  b2:	27 b3       	in	r18, 0x17	; 23
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_SetPinDir+0x3c>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_SetPinDir+0x38>
  c2:	82 2b       	or	r24, r18
  c4:	87 bb       	out	0x17, r24	; 23
  c6:	08 95       	ret
  c8:	24 b3       	in	r18, 0x14	; 20
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_SetPinDir+0x52>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_SetPinDir+0x4e>
  d8:	82 2b       	or	r24, r18
  da:	84 bb       	out	0x14, r24	; 20
  dc:	08 95       	ret
  de:	21 b3       	in	r18, 0x11	; 17
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_SetPinDir+0x68>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_SetPinDir+0x64>
  ee:	82 2b       	or	r24, r18
  f0:	81 bb       	out	0x11, r24	; 17
  f2:	08 95       	ret
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	91 f0       	breq	.+36     	; 0x11c <DIO_SetPinDir+0x9a>
  f8:	28 f0       	brcs	.+10     	; 0x104 <DIO_SetPinDir+0x82>
  fa:	82 30       	cpi	r24, 0x02	; 2
  fc:	d9 f0       	breq	.+54     	; 0x134 <DIO_SetPinDir+0xb2>
  fe:	83 30       	cpi	r24, 0x03	; 3
 100:	29 f1       	breq	.+74     	; 0x14c <DIO_SetPinDir+0xca>
 102:	08 95       	ret
 104:	2a b3       	in	r18, 0x1a	; 26
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_SetPinDir+0x8e>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_SetPinDir+0x8a>
 114:	80 95       	com	r24
 116:	82 23       	and	r24, r18
 118:	8a bb       	out	0x1a, r24	; 26
 11a:	08 95       	ret
 11c:	27 b3       	in	r18, 0x17	; 23
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_SetPinDir+0xa6>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_SetPinDir+0xa2>
 12c:	80 95       	com	r24
 12e:	82 23       	and	r24, r18
 130:	87 bb       	out	0x17, r24	; 23
 132:	08 95       	ret
 134:	24 b3       	in	r18, 0x14	; 20
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_SetPinDir+0xbe>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_SetPinDir+0xba>
 144:	80 95       	com	r24
 146:	82 23       	and	r24, r18
 148:	84 bb       	out	0x14, r24	; 20
 14a:	08 95       	ret
 14c:	21 b3       	in	r18, 0x11	; 17
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <DIO_SetPinDir+0xd6>
 154:	88 0f       	add	r24, r24
 156:	99 1f       	adc	r25, r25
 158:	6a 95       	dec	r22
 15a:	e2 f7       	brpl	.-8      	; 0x154 <DIO_SetPinDir+0xd2>
 15c:	80 95       	com	r24
 15e:	82 23       	and	r24, r18
 160:	81 bb       	out	0x11, r24	; 17
 162:	08 95       	ret

00000164 <DIO_SetPinVal>:
 164:	44 23       	and	r20, r20
 166:	b9 f1       	breq	.+110    	; 0x1d6 <DIO_SetPinVal+0x72>
 168:	41 30       	cpi	r20, 0x01	; 1
 16a:	09 f0       	breq	.+2      	; 0x16e <DIO_SetPinVal+0xa>
 16c:	6b c0       	rjmp	.+214    	; 0x244 <DIO_SetPinVal+0xe0>
 16e:	81 30       	cpi	r24, 0x01	; 1
 170:	89 f0       	breq	.+34     	; 0x194 <DIO_SetPinVal+0x30>
 172:	28 f0       	brcs	.+10     	; 0x17e <DIO_SetPinVal+0x1a>
 174:	82 30       	cpi	r24, 0x02	; 2
 176:	c9 f0       	breq	.+50     	; 0x1aa <DIO_SetPinVal+0x46>
 178:	83 30       	cpi	r24, 0x03	; 3
 17a:	11 f1       	breq	.+68     	; 0x1c0 <DIO_SetPinVal+0x5c>
 17c:	08 95       	ret
 17e:	2b b3       	in	r18, 0x1b	; 27
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_SetPinVal+0x26>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_SetPinVal+0x22>
 18e:	82 2b       	or	r24, r18
 190:	8b bb       	out	0x1b, r24	; 27
 192:	08 95       	ret
 194:	28 b3       	in	r18, 0x18	; 24
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_SetPinVal+0x3c>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_SetPinVal+0x38>
 1a4:	82 2b       	or	r24, r18
 1a6:	88 bb       	out	0x18, r24	; 24
 1a8:	08 95       	ret
 1aa:	25 b3       	in	r18, 0x15	; 21
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_SetPinVal+0x52>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_SetPinVal+0x4e>
 1ba:	82 2b       	or	r24, r18
 1bc:	85 bb       	out	0x15, r24	; 21
 1be:	08 95       	ret
 1c0:	22 b3       	in	r18, 0x12	; 18
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <DIO_SetPinVal+0x68>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <DIO_SetPinVal+0x64>
 1d0:	82 2b       	or	r24, r18
 1d2:	82 bb       	out	0x12, r24	; 18
 1d4:	08 95       	ret
 1d6:	81 30       	cpi	r24, 0x01	; 1
 1d8:	91 f0       	breq	.+36     	; 0x1fe <DIO_SetPinVal+0x9a>
 1da:	28 f0       	brcs	.+10     	; 0x1e6 <DIO_SetPinVal+0x82>
 1dc:	82 30       	cpi	r24, 0x02	; 2
 1de:	d9 f0       	breq	.+54     	; 0x216 <DIO_SetPinVal+0xb2>
 1e0:	83 30       	cpi	r24, 0x03	; 3
 1e2:	29 f1       	breq	.+74     	; 0x22e <DIO_SetPinVal+0xca>
 1e4:	08 95       	ret
 1e6:	2b b3       	in	r18, 0x1b	; 27
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <DIO_SetPinVal+0x8e>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	6a 95       	dec	r22
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <DIO_SetPinVal+0x8a>
 1f6:	80 95       	com	r24
 1f8:	82 23       	and	r24, r18
 1fa:	8b bb       	out	0x1b, r24	; 27
 1fc:	08 95       	ret
 1fe:	28 b3       	in	r18, 0x18	; 24
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_SetPinVal+0xa6>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	6a 95       	dec	r22
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_SetPinVal+0xa2>
 20e:	80 95       	com	r24
 210:	82 23       	and	r24, r18
 212:	88 bb       	out	0x18, r24	; 24
 214:	08 95       	ret
 216:	25 b3       	in	r18, 0x15	; 21
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <DIO_SetPinVal+0xbe>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <DIO_SetPinVal+0xba>
 226:	80 95       	com	r24
 228:	82 23       	and	r24, r18
 22a:	85 bb       	out	0x15, r24	; 21
 22c:	08 95       	ret
 22e:	22 b3       	in	r18, 0x12	; 18
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_SetPinVal+0xd6>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	6a 95       	dec	r22
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_SetPinVal+0xd2>
 23e:	80 95       	com	r24
 240:	82 23       	and	r24, r18
 242:	82 bb       	out	0x12, r24	; 18
 244:	08 95       	ret

00000246 <DIO_TogglePIN>:
 246:	81 30       	cpi	r24, 0x01	; 1
 248:	89 f0       	breq	.+34     	; 0x26c <DIO_TogglePIN+0x26>
 24a:	28 f0       	brcs	.+10     	; 0x256 <DIO_TogglePIN+0x10>
 24c:	82 30       	cpi	r24, 0x02	; 2
 24e:	c9 f0       	breq	.+50     	; 0x282 <DIO_TogglePIN+0x3c>
 250:	83 30       	cpi	r24, 0x03	; 3
 252:	11 f1       	breq	.+68     	; 0x298 <DIO_TogglePIN+0x52>
 254:	08 95       	ret
 256:	2b b3       	in	r18, 0x1b	; 27
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_TogglePIN+0x1c>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	6a 95       	dec	r22
 264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_TogglePIN+0x18>
 266:	82 27       	eor	r24, r18
 268:	8b bb       	out	0x1b, r24	; 27
 26a:	08 95       	ret
 26c:	28 b3       	in	r18, 0x18	; 24
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	02 c0       	rjmp	.+4      	; 0x278 <DIO_TogglePIN+0x32>
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	6a 95       	dec	r22
 27a:	e2 f7       	brpl	.-8      	; 0x274 <DIO_TogglePIN+0x2e>
 27c:	82 27       	eor	r24, r18
 27e:	88 bb       	out	0x18, r24	; 24
 280:	08 95       	ret
 282:	25 b3       	in	r18, 0x15	; 21
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	02 c0       	rjmp	.+4      	; 0x28e <DIO_TogglePIN+0x48>
 28a:	88 0f       	add	r24, r24
 28c:	99 1f       	adc	r25, r25
 28e:	6a 95       	dec	r22
 290:	e2 f7       	brpl	.-8      	; 0x28a <DIO_TogglePIN+0x44>
 292:	82 27       	eor	r24, r18
 294:	85 bb       	out	0x15, r24	; 21
 296:	08 95       	ret
 298:	22 b3       	in	r18, 0x12	; 18
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	02 c0       	rjmp	.+4      	; 0x2a4 <DIO_TogglePIN+0x5e>
 2a0:	88 0f       	add	r24, r24
 2a2:	99 1f       	adc	r25, r25
 2a4:	6a 95       	dec	r22
 2a6:	e2 f7       	brpl	.-8      	; 0x2a0 <DIO_TogglePIN+0x5a>
 2a8:	82 27       	eor	r24, r18
 2aa:	82 bb       	out	0x12, r24	; 18
 2ac:	08 95       	ret

000002ae <LCD_Write_Command>:
 2ae:	cf 93       	push	r28
 2b0:	c8 2f       	mov	r28, r24
 2b2:	40 e0       	ldi	r20, 0x00	; 0
 2b4:	61 e0       	ldi	r22, 0x01	; 1
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 2bc:	40 e0       	ldi	r20, 0x00	; 0
 2be:	62 e0       	ldi	r22, 0x02	; 2
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 2c6:	40 e0       	ldi	r20, 0x00	; 0
 2c8:	63 e0       	ldi	r22, 0x03	; 3
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 2d0:	8b b3       	in	r24, 0x1b	; 27
 2d2:	9c 2f       	mov	r25, r28
 2d4:	90 7f       	andi	r25, 0xF0	; 240
 2d6:	8f 70       	andi	r24, 0x0F	; 15
 2d8:	89 2b       	or	r24, r25
 2da:	8b bb       	out	0x1b, r24	; 27
 2dc:	41 e0       	ldi	r20, 0x01	; 1
 2de:	63 e0       	ldi	r22, 0x03	; 3
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2e6:	8f e9       	ldi	r24, 0x9F	; 159
 2e8:	9f e0       	ldi	r25, 0x0F	; 15
 2ea:	01 97       	sbiw	r24, 0x01	; 1
 2ec:	f1 f7       	brne	.-4      	; 0x2ea <LCD_Write_Command+0x3c>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <LCD_Write_Command+0x42>
 2f0:	00 00       	nop
 2f2:	40 e0       	ldi	r20, 0x00	; 0
 2f4:	63 e0       	ldi	r22, 0x03	; 3
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 2fc:	20 e1       	ldi	r18, 0x10	; 16
 2fe:	c2 9f       	mul	r28, r18
 300:	c0 01       	movw	r24, r0
 302:	11 24       	eor	r1, r1
 304:	9b b3       	in	r25, 0x1b	; 27
 306:	9f 70       	andi	r25, 0x0F	; 15
 308:	89 2b       	or	r24, r25
 30a:	8b bb       	out	0x1b, r24	; 27
 30c:	41 e0       	ldi	r20, 0x01	; 1
 30e:	63 e0       	ldi	r22, 0x03	; 3
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 316:	8f e9       	ldi	r24, 0x9F	; 159
 318:	9f e0       	ldi	r25, 0x0F	; 15
 31a:	01 97       	sbiw	r24, 0x01	; 1
 31c:	f1 f7       	brne	.-4      	; 0x31a <LCD_Write_Command+0x6c>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <LCD_Write_Command+0x72>
 320:	00 00       	nop
 322:	40 e0       	ldi	r20, 0x00	; 0
 324:	63 e0       	ldi	r22, 0x03	; 3
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 32c:	8f e1       	ldi	r24, 0x1F	; 31
 32e:	9e e4       	ldi	r25, 0x4E	; 78
 330:	01 97       	sbiw	r24, 0x01	; 1
 332:	f1 f7       	brne	.-4      	; 0x330 <LCD_Write_Command+0x82>
 334:	00 c0       	rjmp	.+0      	; 0x336 <LCD_Write_Command+0x88>
 336:	00 00       	nop
 338:	cf 91       	pop	r28
 33a:	08 95       	ret

0000033c <LCD_INIT>:
 33c:	41 e0       	ldi	r20, 0x01	; 1
 33e:	61 e0       	ldi	r22, 0x01	; 1
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 346:	41 e0       	ldi	r20, 0x01	; 1
 348:	62 e0       	ldi	r22, 0x02	; 2
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 350:	41 e0       	ldi	r20, 0x01	; 1
 352:	63 e0       	ldi	r22, 0x03	; 3
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 35a:	41 e0       	ldi	r20, 0x01	; 1
 35c:	64 e0       	ldi	r22, 0x04	; 4
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 364:	41 e0       	ldi	r20, 0x01	; 1
 366:	65 e0       	ldi	r22, 0x05	; 5
 368:	80 e0       	ldi	r24, 0x00	; 0
 36a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 36e:	41 e0       	ldi	r20, 0x01	; 1
 370:	66 e0       	ldi	r22, 0x06	; 6
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 378:	41 e0       	ldi	r20, 0x01	; 1
 37a:	67 e0       	ldi	r22, 0x07	; 7
 37c:	80 e0       	ldi	r24, 0x00	; 0
 37e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 382:	2f ef       	ldi	r18, 0xFF	; 255
 384:	81 ee       	ldi	r24, 0xE1	; 225
 386:	94 e0       	ldi	r25, 0x04	; 4
 388:	21 50       	subi	r18, 0x01	; 1
 38a:	80 40       	sbci	r24, 0x00	; 0
 38c:	90 40       	sbci	r25, 0x00	; 0
 38e:	e1 f7       	brne	.-8      	; 0x388 <LCD_INIT+0x4c>
 390:	00 c0       	rjmp	.+0      	; 0x392 <LCD_INIT+0x56>
 392:	00 00       	nop
 394:	83 e3       	ldi	r24, 0x33	; 51
 396:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_Write_Command>
 39a:	82 e3       	ldi	r24, 0x32	; 50
 39c:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_Write_Command>
 3a0:	88 e2       	ldi	r24, 0x28	; 40
 3a2:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_Write_Command>
 3a6:	8c e0       	ldi	r24, 0x0C	; 12
 3a8:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_Write_Command>
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_Write_Command>
 3b2:	86 e0       	ldi	r24, 0x06	; 6
 3b4:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_Write_Command>
 3b8:	82 e0       	ldi	r24, 0x02	; 2
 3ba:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_Write_Command>
 3be:	08 95       	ret

000003c0 <LCD_Write_Char>:
 3c0:	cf 93       	push	r28
 3c2:	c8 2f       	mov	r28, r24
 3c4:	41 e0       	ldi	r20, 0x01	; 1
 3c6:	61 e0       	ldi	r22, 0x01	; 1
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 3ce:	40 e0       	ldi	r20, 0x00	; 0
 3d0:	62 e0       	ldi	r22, 0x02	; 2
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 3d8:	40 e0       	ldi	r20, 0x00	; 0
 3da:	63 e0       	ldi	r22, 0x03	; 3
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 3e2:	8b b3       	in	r24, 0x1b	; 27
 3e4:	9c 2f       	mov	r25, r28
 3e6:	90 7f       	andi	r25, 0xF0	; 240
 3e8:	8f 70       	andi	r24, 0x0F	; 15
 3ea:	89 2b       	or	r24, r25
 3ec:	8b bb       	out	0x1b, r24	; 27
 3ee:	41 e0       	ldi	r20, 0x01	; 1
 3f0:	63 e0       	ldi	r22, 0x03	; 3
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 3f8:	8f e9       	ldi	r24, 0x9F	; 159
 3fa:	9f e0       	ldi	r25, 0x0F	; 15
 3fc:	01 97       	sbiw	r24, 0x01	; 1
 3fe:	f1 f7       	brne	.-4      	; 0x3fc <LCD_Write_Char+0x3c>
 400:	00 c0       	rjmp	.+0      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 402:	00 00       	nop
 404:	40 e0       	ldi	r20, 0x00	; 0
 406:	63 e0       	ldi	r22, 0x03	; 3
 408:	81 e0       	ldi	r24, 0x01	; 1
 40a:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 40e:	20 e1       	ldi	r18, 0x10	; 16
 410:	c2 9f       	mul	r28, r18
 412:	c0 01       	movw	r24, r0
 414:	11 24       	eor	r1, r1
 416:	9b b3       	in	r25, 0x1b	; 27
 418:	9f 70       	andi	r25, 0x0F	; 15
 41a:	89 2b       	or	r24, r25
 41c:	8b bb       	out	0x1b, r24	; 27
 41e:	41 e0       	ldi	r20, 0x01	; 1
 420:	63 e0       	ldi	r22, 0x03	; 3
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 428:	8f e9       	ldi	r24, 0x9F	; 159
 42a:	9f e0       	ldi	r25, 0x0F	; 15
 42c:	01 97       	sbiw	r24, 0x01	; 1
 42e:	f1 f7       	brne	.-4      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 430:	00 c0       	rjmp	.+0      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 432:	00 00       	nop
 434:	40 e0       	ldi	r20, 0x00	; 0
 436:	63 e0       	ldi	r22, 0x03	; 3
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 43e:	8f e1       	ldi	r24, 0x1F	; 31
 440:	9e e4       	ldi	r25, 0x4E	; 78
 442:	01 97       	sbiw	r24, 0x01	; 1
 444:	f1 f7       	brne	.-4      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 446:	00 c0       	rjmp	.+0      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 448:	00 00       	nop
 44a:	cf 91       	pop	r28
 44c:	08 95       	ret

0000044e <LCD_Write_String>:
 44e:	0f 93       	push	r16
 450:	1f 93       	push	r17
 452:	cf 93       	push	r28
 454:	8c 01       	movw	r16, r24
 456:	c0 e0       	ldi	r28, 0x00	; 0
 458:	03 c0       	rjmp	.+6      	; 0x460 <LCD_Write_String+0x12>
 45a:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LCD_Write_Char>
 45e:	cf 5f       	subi	r28, 0xFF	; 255
 460:	f8 01       	movw	r30, r16
 462:	ec 0f       	add	r30, r28
 464:	f1 1d       	adc	r31, r1
 466:	80 81       	ld	r24, Z
 468:	81 11       	cpse	r24, r1
 46a:	f7 cf       	rjmp	.-18     	; 0x45a <LCD_Write_String+0xc>
 46c:	cf 91       	pop	r28
 46e:	1f 91       	pop	r17
 470:	0f 91       	pop	r16
 472:	08 95       	ret

00000474 <LCD_GoTo>:
 474:	cf 93       	push	r28
 476:	df 93       	push	r29
 478:	00 d0       	rcall	.+0      	; 0x47a <LCD_GoTo+0x6>
 47a:	cd b7       	in	r28, 0x3d	; 61
 47c:	de b7       	in	r29, 0x3e	; 62
 47e:	90 e8       	ldi	r25, 0x80	; 128
 480:	99 83       	std	Y+1, r25	; 0x01
 482:	90 ec       	ldi	r25, 0xC0	; 192
 484:	9a 83       	std	Y+2, r25	; 0x02
 486:	e1 e0       	ldi	r30, 0x01	; 1
 488:	f0 e0       	ldi	r31, 0x00	; 0
 48a:	ec 0f       	add	r30, r28
 48c:	fd 1f       	adc	r31, r29
 48e:	e6 0f       	add	r30, r22
 490:	f1 1d       	adc	r31, r1
 492:	90 81       	ld	r25, Z
 494:	89 0f       	add	r24, r25
 496:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_Write_Command>
 49a:	0f 90       	pop	r0
 49c:	0f 90       	pop	r0
 49e:	df 91       	pop	r29
 4a0:	cf 91       	pop	r28
 4a2:	08 95       	ret

000004a4 <LCD_Clear>:
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_Write_Command>
 4aa:	08 95       	ret

000004ac <LED_BLUE_INIT>:
 4ac:	41 e0       	ldi	r20, 0x01	; 1
 4ae:	60 e0       	ldi	r22, 0x00	; 0
 4b0:	82 e0       	ldi	r24, 0x02	; 2
 4b2:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 4b6:	08 95       	ret

000004b8 <LED_BLUE_OFF>:
 4b8:	40 e0       	ldi	r20, 0x00	; 0
 4ba:	60 e0       	ldi	r22, 0x00	; 0
 4bc:	82 e0       	ldi	r24, 0x02	; 2
 4be:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 4c2:	08 95       	ret

000004c4 <LED_BLUE_TOGGLE>:
 4c4:	60 e0       	ldi	r22, 0x00	; 0
 4c6:	82 e0       	ldi	r24, 0x02	; 2
 4c8:	0e 94 23 01 	call	0x246	; 0x246 <DIO_TogglePIN>
 4cc:	08 95       	ret

000004ce <LED_RED_INIT>:
 4ce:	41 e0       	ldi	r20, 0x01	; 1
 4d0:	61 e0       	ldi	r22, 0x01	; 1
 4d2:	82 e0       	ldi	r24, 0x02	; 2
 4d4:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 4d8:	08 95       	ret

000004da <LED_RED_OFF>:
 4da:	40 e0       	ldi	r20, 0x00	; 0
 4dc:	61 e0       	ldi	r22, 0x01	; 1
 4de:	82 e0       	ldi	r24, 0x02	; 2
 4e0:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 4e4:	08 95       	ret

000004e6 <LED_RED_TOGGLE>:
 4e6:	61 e0       	ldi	r22, 0x01	; 1
 4e8:	82 e0       	ldi	r24, 0x02	; 2
 4ea:	0e 94 23 01 	call	0x246	; 0x246 <DIO_TogglePIN>
 4ee:	08 95       	ret

000004f0 <main>:
#include "LCD.h"


int main(void)
{
	LED_BLUE_INIT(); // Blue LED Initializing as output
 4f0:	0e 94 56 02 	call	0x4ac	; 0x4ac <LED_BLUE_INIT>
	LED_RED_INIT();  // Red  LED Initializing as output
 4f4:	0e 94 67 02 	call	0x4ce	; 0x4ce <LED_RED_INIT>
	LCD_INIT();
 4f8:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_INIT>
	
	
	SPI_Slave_Init(); // Initializing the micro controller as a slave SPI 
 4fc:	0e 94 a5 02 	call	0x54a	; 0x54a <SPI_Slave_Init>
	
	uint8 *s =  "a,b to TogleLED" ; // Instructions display for the user to know what to type to control the system LED
	uint8 *t =  "Put'p'CLR & OFF" ;
	
	
	LCD_Clear();
 500:	0e 94 52 02 	call	0x4a4	; 0x4a4 <LCD_Clear>
	LCD_GoTo(0,0);
 504:	60 e0       	ldi	r22, 0x00	; 0
 506:	80 e0       	ldi	r24, 0x00	; 0
 508:	0e 94 3a 02 	call	0x474	; 0x474 <LCD_GoTo>
	LCD_Write_String(s);
 50c:	80 e6       	ldi	r24, 0x60	; 96
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	0e 94 27 02 	call	0x44e	; 0x44e <LCD_Write_String>
	LCD_GoTo(0,1);
 514:	61 e0       	ldi	r22, 0x01	; 1
 516:	80 e0       	ldi	r24, 0x00	; 0
 518:	0e 94 3a 02 	call	0x474	; 0x474 <LCD_GoTo>
	LCD_Write_String(t);
 51c:	80 e7       	ldi	r24, 0x70	; 112
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	0e 94 27 02 	call	0x44e	; 0x44e <LCD_Write_String>
    
    while (1) 
    {
		Receive_data = SPI_TranSiver(Slave_data);  // Initializing received data from the Master Micro
 524:	80 e0       	ldi	r24, 0x00	; 0
 526:	0e 94 be 02 	call	0x57c	; 0x57c <SPI_TranSiver>
 52a:	c8 2f       	mov	r28, r24
		
		if (Receive_data == 'a') 
 52c:	81 36       	cpi	r24, 0x61	; 97
 52e:	11 f4       	brne	.+4      	; 0x534 <main+0x44>
		{
			LED_BLUE_TOGGLE(); // Toggle Blue LED if received Char a  
 530:	0e 94 62 02 	call	0x4c4	; 0x4c4 <LED_BLUE_TOGGLE>
		}
	
		if (Receive_data == 'b')
 534:	c2 36       	cpi	r28, 0x62	; 98
 536:	11 f4       	brne	.+4      	; 0x53c <main+0x4c>
		{
			LED_RED_TOGGLE();  // Toggle Red LED if received Char b 
 538:	0e 94 73 02 	call	0x4e6	; 0x4e6 <LED_RED_TOGGLE>
		}
		
		if (Receive_data == 'p') // Switching off "BLUE & RED" LED  for clearing data in the Master Micro in LCD "code written in the Master main.c data clearing in LCD" and also to know witch operation we are from LCD
 53c:	c0 37       	cpi	r28, 0x70	; 112
 53e:	91 f7       	brne	.-28     	; 0x524 <main+0x34>
		{
			LED_BLUE_OFF(); 
 540:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <LED_BLUE_OFF>
			LED_RED_OFF();
 544:	0e 94 6d 02 	call	0x4da	; 0x4da <LED_RED_OFF>
 548:	ed cf       	rjmp	.-38     	; 0x524 <main+0x34>

0000054a <SPI_Slave_Init>:
	
}

void  SPI_Master_EndTrans(void)
{
	DIO_SetPinVal(DIO_PORTB,DIO_PIN4,DIO_PIN_HIGH);
 54a:	40 e0       	ldi	r20, 0x00	; 0
 54c:	64 e0       	ldi	r22, 0x04	; 4
 54e:	81 e0       	ldi	r24, 0x01	; 1
 550:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 554:	40 e0       	ldi	r20, 0x00	; 0
 556:	65 e0       	ldi	r22, 0x05	; 5
 558:	81 e0       	ldi	r24, 0x01	; 1
 55a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 55e:	41 e0       	ldi	r20, 0x01	; 1
 560:	66 e0       	ldi	r22, 0x06	; 6
 562:	81 e0       	ldi	r24, 0x01	; 1
 564:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 568:	40 e0       	ldi	r20, 0x00	; 0
 56a:	67 e0       	ldi	r22, 0x07	; 7
 56c:	81 e0       	ldi	r24, 0x01	; 1
 56e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 572:	80 e4       	ldi	r24, 0x40	; 64
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	9e b9       	out	0x0e, r25	; 14
 578:	8d b9       	out	0x0d, r24	; 13
 57a:	08 95       	ret

0000057c <SPI_TranSiver>:
}

uint8 SPI_TranSiver(uint8 data)
{
	SPDR = data ; 
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	90 bb       	out	0x10, r25	; 16
 580:	8f b9       	out	0x0f, r24	; 15
	
	while(GET_BIT( SPSR , 7 ) == 0);
 582:	8e b1       	in	r24, 0x0e	; 14
 584:	9f b1       	in	r25, 0x0f	; 15
 586:	87 ff       	sbrs	r24, 7
 588:	fc cf       	rjmp	.-8      	; 0x582 <SPI_TranSiver+0x6>
	
	return SPDR ; 
 58a:	8f b1       	in	r24, 0x0f	; 15
 58c:	90 b3       	in	r25, 0x10	; 16
	
}
 58e:	08 95       	ret

00000590 <_exit>:
 590:	f8 94       	cli

00000592 <__stop_program>:
 592:	ff cf       	rjmp	.-2      	; 0x592 <__stop_program>
